import React, { Component, ReactNode } from 'react';

// 定义 ErrorBoundary 的 props 和 state 类型
interface ErrorBoundaryProps {
  children: ReactNode;
}

interface ErrorBoundaryState {
  hasError: boolean;
}

class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {
  constructor(props: ErrorBoundaryProps) {
    super(props);
    // 初始化 state，添加 hasError 属性
    this.state = { hasError: false };
  }

  // 捕获子组件的错误，并更新 state
  static getDerivedStateFromError(_: Error): ErrorBoundaryState {
    return { hasError: true };
  }

  // 错误捕获方法，可用于记录错误信息
  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {
    console.error("ErrorBoundary caught an error", error, errorInfo);
  }

  render() {
    if (this.state.hasError) {
      // 自定义错误界面
      return <h1>模型加载失败，请稍后重试。</h1>;
    }

    // 正常渲染子组件
    return this.props.children;
  }
}

export default ErrorBoundary;
